// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  VISITOR
  USER
  ADMIN
}

model User {
  id                   String    @id @default(uuid())
  discordIdentifier    String    @unique
  discordUsername      String    @db.VarChar(255)
  discordDiscriminator String    @db.VarChar(255)
  discordAvatar        String    @db.VarChar(255)
  discordToken         String    @db.VarChar(255)
  role                 Role      @default(VISITOR)
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  trainings            Trainer[]
  operations           Soldier[]

  @@map("users")
}

model Training {
  id          String    @id @default(uuid())
  name        String    @db.VarChar(255)
  description String    @db.Text
  image       String    @db.VarChar(255)
  visible     Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  trainers    Trainer[]
  Soldier     Soldier[]

  @@map("trainings")
}

model Trainer {
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.VarChar(255)
  training   Training @relation(fields: [trainingId], references: [id])
  trainingId String   @db.VarChar(255)
  assignedAt DateTime @default(now())

  @@id([userId, trainingId])
  @@map("trainers")
}

model Campaign {
  id         String      @id @default(uuid())
  name       String      @db.VarChar(255)
  summary    String      @db.Text
  image      String      @db.VarChar(255)
  slug       String      @unique @db.VarChar(255)
  operations Operation[]

  @@map("campaigns")
}

model Operation {
  id         String   @id @default(uuid())
  campaign   Campaign @relation(fields: [campaignId], references: [id])
  campaignId String   @db.VarChar(255)
  name       String   @db.VarChar(255)
  date       DateTime
  summary    String   @db.Text
  image      String   @db.VarChar(255)
  slug       String   @unique @db.VarChar(255)
  groups     Group[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("operations")
}

model Group {
  id          String    @id @default(uuid())
  operation   Operation @relation(fields: [operationId], references: [id])
  operationId String    @db.VarChar(255)
  name        String    @db.VarChar(255)
  radio       String?   @db.VarChar(255)
  vehicle     String?   @db.VarChar(255)
  teams       Team[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("groups")
}

model Team {
  id        String    @id @default(uuid())
  group     Group     @relation(fields: [groupId], references: [id])
  groupId   String
  name      String
  soldiers  Soldier[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("teams")
}

model Soldier {
  id         String   @id @default(uuid())
  team       Team     @relation(fields: [teamId], references: [id])
  teamId     String
  user       User?    @relation(fields: [userId], references: [id])
  userId     String?
  training   Training @relation(fields: [trainingId], references: [id])
  trainingId String
  name       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("soldiers")
}

model Setting {
  name        String   @unique
  description String?  @db.Text
  value       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("settings")
}
